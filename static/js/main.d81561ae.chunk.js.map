{"version":3,"sources":["components/Products/Products.js","App.js","index.js"],"names":["Products","state","list","props","goods","isReverse","setState","reverse","isSort","sort","isSortLength","a","b","length","isReset","className","this","map","product","key","type","onClick","React","Component","goodsFromServer","App","products","isStarted","createList","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAK,YAAK,EAAKC,MAAMC,QAFzB,EAKEC,UAAY,WACV,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,KAAK,YAAKD,EAAMC,KAAKK,gBAP3B,EAWEC,OAAS,WACP,EAAKF,UAAS,SAAAL,GAAK,MAAK,CACtBC,KAAK,YAAKD,EAAMC,KAAKO,aAb3B,EAiBEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,KAAK,YAAKD,EAAMC,KAAKO,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,gBAnBvD,EAuBEC,QAAU,WACR,EAAKR,SAAS,CACZJ,KAAK,YAAK,EAAKC,MAAMC,UAzB3B,uDA8BI,OACE,oCACE,wBAAIW,UAAU,QACXC,KAAKf,MAAMC,KAAKe,KAAI,SAAAC,GAAO,OAC1B,wBAAIC,IAAKD,GACNA,OAIP,yBAAKH,UAAU,WACb,4BAAQK,KAAK,SAASC,QAASL,KAAKX,WAApC,WAGA,4BAAQe,KAAK,SAASC,QAASL,KAAKR,QAApC,UAGA,4BAAQY,KAAK,SAASC,QAASL,KAAKN,cAApC,gBAGA,4BAAQU,KAAK,SAASC,QAASL,KAAKF,SAApC,iBAjDV,GAA8BQ,IAAMC,WCE9BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqCaC,E,4MAjCbxB,MAAQ,CACNyB,SAAS,GAAD,OAAMF,GACdG,WAAW,G,EAGbC,WAAa,WACX,EAAKtB,SAAS,CACZqB,WAAW,K,uDAKb,OACE,yBAAKZ,UAAU,OACb,qCACEC,KAAKf,MAAM0B,UAQT,KAPF,4BACEP,KAAK,SACLL,UAAU,eACVM,QAASL,KAAKY,YAHhB,QAQDZ,KAAKf,MAAM0B,UACP,kBAAC,EAAD,CAAUvB,MAAOY,KAAKf,MAAMyB,WAC7B,U,GA3BMJ,IAAMC,WCdxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d81561ae.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Products extends React.Component {\n  state = {\n    list: [...this.props.goods],\n  };\n\n  isReverse = () => {\n    this.setState(state => ({\n      list: [...state.list.reverse()],\n    }));\n  }\n\n  isSort = () => {\n    this.setState(state => ({\n      list: [...state.list.sort()],\n    }));\n  }\n\n  isSortLength = () => {\n    this.setState(state => ({\n      list: [...state.list.sort((a, b) => a.length - b.length)],\n    }));\n  }\n\n  isReset = () => {\n    this.setState({\n      list: [...this.props.goods],\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <ul className=\"list\">\n          {this.state.list.map(product => (\n            <li key={product}>\n              {product}\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttons\">\n          <button type=\"button\" onClick={this.isReverse}>\n            reverse\n          </button>\n          <button type=\"button\" onClick={this.isSort}>\n            isSort\n          </button>\n          <button type=\"button\" onClick={this.isSortLength}>\n            isSortLength\n          </button>\n          <button type=\"button\" onClick={this.isReset}>\n            isReset\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nProducts.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport './App.css';\nimport { Products } from './components/Products/Products';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    products: [...goodsFromServer],\n    isStarted: false,\n  };\n\n  createList = () => {\n    this.setState({\n      isStarted: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!this.state.isStarted ? (\n          <button\n            type=\"button\"\n            className=\"button-start\"\n            onClick={this.createList}\n          >\n            Star\n          </button>\n        ) : null}\n        {this.state.isStarted\n          ? (<Products goods={this.state.products} />)\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}